apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "node.fullname" . }}
  labels:
    {{- include "node.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "node.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "node.fullname" . }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --ws-external
            - --rpc-cors=all
            - --chain={{ .Values.chain }}
            - --wasm-execution=compiled
            - --pruning=archive
            - -d=/data
          ports:
            - containerPort: 30333
              name: p2p
            - containerPort: 9933
              name: http-rpc
            - containerPort: 9944
              name: websocket-rpc
            - containerPort: 9615
              name: metrics
          livenessProbe:
            failureThreshold: 100
            exec:
              command:
                - sh
                - -c
                - >-
                  curl -H "Content-Type: application/json" --data '{ "jsonrpc":"2.0", "method":"system_health", "params":[],"id":1 }' localhost:9933
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 100
            exec:
              command:
                - sh
                - -c
                - >-
                  curl -H "Content-Type: application/json" --data '{ "jsonrpc":"2.0", "method":"system_health", "params":[],"id":1 }' localhost:9933
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - mountPath: /data
              name: data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        {{- if .Values.persistence.enabled }}
        accessModes: {{ .Values.persistence.accessModes }}
        resources:
          requests:
            storage: {{ .Values.persistence.dataSize }}
        {{- else }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 3Gi
        {{- end }}
