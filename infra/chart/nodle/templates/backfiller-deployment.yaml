{{- if and .Values.backfiller.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodle.backfiller.fullname" . }}
  labels:
    {{- include "nodle.backfiller.labels" . | nindent 4 }}
{{ include "nodle.namespace" . | indent 2 }}
spec:
  replicas: {{ .Values.backfiller.replicaCount }}
  selector:
    matchLabels:
      {{- include "nodle.backfiller.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "nodle.backfiller.labels" . | nindent 8 }}
      {{- if .Values.backfiller.podLabels}}
      {{ toYaml .Values.backfiller.podLabels | nindent 8 }}
      {{- end}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ template "nodle.name" . }}-{{ .Values.backfiller.name }}
          image: "{{ .Values.backfiller.image.repository }}:{{ .Values.backfiller.image.tag }}"
          imagePullPolicy: {{ .Values.backfiller.image.pullPolicy }}
          env:
            # database
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: database_host
                  name: {{ template "nodle.backfiller.fullname" . }}
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  key: database_name
                  name: {{ template "nodle.backfiller.fullname" . }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: database_username
                  name: {{ template "nodle.backfiller.fullname" . }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database_password
                  name: {{ template "nodle.backfiller.fullname" . }}
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: database_port
                  name: {{ template "nodle.backfiller.fullname" . }}
          readinessProbe:
            httpGet:
              path: /v1/ready
              port: 9000
          resources:
{{ toYaml .Values.backfiller.resources | indent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}